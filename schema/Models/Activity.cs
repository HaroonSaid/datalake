// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Models
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	public partial class Activity : ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse(@"{""type"":""record"",""name"":""Activity"",""namespace"":""Models"",""fields"":[{""name"":""UserId"",""doc"":""The UserId"",""type"":""string""},{""name"":""Timestamp"",""doc"":""The recorded timestamp"",""type"":""long""},{""name"":""ActivityType"",""doc"":""The application activity Type"",""type"":{""type"":""enum"",""name"":""ActivityType"",""namespace"":""Models"",""symbols"":[""UserProfile"",""StockTrade""]}},{""name"":""UserInfo"",""doc"":""The User Infor Profile Events"",""type"":[""null"",{""type"":""record"",""name"":""UserInfo"",""namespace"":""Models"",""fields"":[{""name"":""first"",""type"":""string""},{""name"":""middle"",""default"":"""",""type"":""string""},{""name"":""last"",""type"":""string""}]}]},{""name"":""Ticket"",""doc"":""The Stock Transaction Deal Ticket Events"",""type"":[""null"",{""type"":""record"",""name"":""DealTicket"",""namespace"":""Models"",""fields"":[{""name"":""symbol"",""type"":""string""},{""name"":""OrderType"",""doc"":""The transaction order type"",""type"":{""type"":""enum"",""name"":""OrderType"",""namespace"":""Models"",""symbols"":[""Buy"",""Sell""]}},{""name"":""Quantity"",""doc"":""The quantity"",""type"":""int""},{""name"":""Price"",""doc"":""The Price"",""type"":""bytes"",""locgicalType"":""decimal"",""precison"":10,""scale"":5}]}]}]}");
		/// <summary>
		/// The UserId
		/// </summary>
		private string _UserId;
		/// <summary>
		/// The recorded timestamp
		/// </summary>
		private long _Timestamp;
		/// <summary>
		/// The application activity Type
		/// </summary>
		private Models.ActivityType _ActivityType;
		/// <summary>
		/// The User Infor Profile Events
		/// </summary>
		private Models.UserInfo _UserInfo;
		/// <summary>
		/// The Stock Transaction Deal Ticket Events
		/// </summary>
		private Models.DealTicket _Ticket;
		public virtual Schema Schema
		{
			get
			{
				return Activity._SCHEMA;
			}
		}
		/// <summary>
		/// The UserId
		/// </summary>
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				this._UserId = value;
			}
		}
		/// <summary>
		/// The recorded timestamp
		/// </summary>
		public long Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				this._Timestamp = value;
			}
		}
		/// <summary>
		/// The application activity Type
		/// </summary>
		public Models.ActivityType ActivityType
		{
			get
			{
				return this._ActivityType;
			}
			set
			{
				this._ActivityType = value;
			}
		}
		/// <summary>
		/// The User Infor Profile Events
		/// </summary>
		public Models.UserInfo UserInfo
		{
			get
			{
				return this._UserInfo;
			}
			set
			{
				this._UserInfo = value;
			}
		}
		/// <summary>
		/// The Stock Transaction Deal Ticket Events
		/// </summary>
		public Models.DealTicket Ticket
		{
			get
			{
				return this._Ticket;
			}
			set
			{
				this._Ticket = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.UserId;
			case 1: return this.Timestamp;
			case 2: return this.ActivityType;
			case 3: return this.UserInfo;
			case 4: return this.Ticket;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.UserId = (System.String)fieldValue; break;
			case 1: this.Timestamp = (System.Int64)fieldValue; break;
			case 2: this.ActivityType = (Models.ActivityType)fieldValue; break;
			case 3: this.UserInfo = (Models.UserInfo)fieldValue; break;
			case 4: this.Ticket = (Models.DealTicket)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
