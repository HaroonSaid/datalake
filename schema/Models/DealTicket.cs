// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Models
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	public partial class DealTicket : ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse(@"{""type"":""record"",""name"":""DealTicket"",""namespace"":""Models"",""fields"":[{""name"":""Symbol"",""type"":""string""},{""name"":""OrderType"",""doc"":""The transaction order type"",""type"":{""type"":""enum"",""name"":""OrderType"",""namespace"":""Models"",""symbols"":[""Buy"",""Sell""]}},{""name"":""Quantity"",""doc"":""The quantity"",""type"":""int""},{""name"":""Price"",""doc"":""The Price"",""type"":""string""}]}");
		private string _Symbol;
		/// <summary>
		/// The transaction order type
		/// </summary>
		private Models.OrderType _OrderType;
		/// <summary>
		/// The quantity
		/// </summary>
		private int _Quantity;
		/// <summary>
		/// The Price
		/// </summary>
		private string _Price;
		public virtual Schema Schema
		{
			get
			{
				return DealTicket._SCHEMA;
			}
		}
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				this._Symbol = value;
			}
		}
		/// <summary>
		/// The transaction order type
		/// </summary>
		public Models.OrderType OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				this._OrderType = value;
			}
		}
		/// <summary>
		/// The quantity
		/// </summary>
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				this._Quantity = value;
			}
		}
		/// <summary>
		/// The Price
		/// </summary>
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				this._Price = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.Symbol;
			case 1: return this.OrderType;
			case 2: return this.Quantity;
			case 3: return this.Price;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.Symbol = (System.String)fieldValue; break;
			case 1: this.OrderType = (Models.OrderType)fieldValue; break;
			case 2: this.Quantity = (System.Int32)fieldValue; break;
			case 3: this.Price = (System.String)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
